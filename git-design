#!/bin/bash
# vim: set syntax=sh :
set +exo pipefail

# Take a list of json files, and compress each before copying into the archive.
# ie, compress-json meta.json user.json
compress-json() {
  for file in "$@"; do
    local hashsum="$(echo "${file}" | md5sum | awk '{ print $1 }')"
    echo "  . ${file} (${hashsum})"
    cat "${file}" | jq -c . > /tmp/git-design$$/${hashsum}
    mv "/tmp/git-design$$/${hashsum}" "${file}"
  done
}
# Take a list of json files, and decompress each right after being unpacked from the archive.
# ie, decompress-json meta.json user.json
decompress-json() {
  for file in "$@"; do
    local hashsum="$(echo ${file} | md5sum | awk '{ print $1 }')"
    echo "  . ${file} (${hashsum})"
    cat "${file}" | jq . > "/tmp/git-design$$/${hashsum}"
    mv "/tmp/git-design$$/${hashsum}" "${file}"
  done
}

unpack() {
  for n in "$@"; do
    # If the unpacked versino was passed, map back to the packed one.
    if echo "$n" | grep 'unpacked/*$' > /dev/null; then
      n="$(echo $n | sed 's/-unpacked\/*$//g')"
    fi

    echo " => $n"
    local filename="$(pwd)/$n"
    local unpacked_filename="${filename}-unpacked"
    local file_hashsum="$(echo "${filename}" | md5sum | awk '{ print $1 }')"

    if ! [ -f "${filename}" ]; then
      echo "  . file ${filename} doesn't exist"
      continue
    fi

    if [ "$(cat "${unpacked_filename}/.hashsum" 2> /dev/null)" = "${file_hashsum}" ]; then
      echo "  . already at latest"
      continue
    fi

    case "${filename}" in
    *.sketch)
      mkdir -p "${unpacked_filename}" >> /dev/null
      echo "${file_hashsum}" > "${unpacked_filename}/.hashsum"
      pushd "${unpacked_filename}" >> /dev/null || exit 1
      unzip -o "${filename}" >> /dev/null

      # Expand some sketch-specific json files
      mkdir /tmp/git-design$$
      decompress-json meta.json user.json pages/*.json
      rm -rf /tmp/git-design$$

      popd >> /dev/null || exit 1
      ;;

    *.studio)
      mkdir -p "${unpacked_filename}" >> /dev/null
      echo "${file_hashsum}" > "${unpacked_filename}/.hashsum"
      pushd "${unpacked_filename}" >> /dev/null
      unzip -o "${filename}" >> /dev/null

      # Expand some studio-specific json files
      mkdir /tmp/git-design$$
      decompress-json metadata.json settings.json snapshot.json
      rm -rf /tmp/git-design$$

      popd >> /dev/null || exit 1
      ;;

    *)
      echo " unsure how to unpack ${filename}"
    esac
  done
}

pack() {
  for n in "$@"; do
    # If the unpacked versino was passed, map back to the packed one.
    if echo "$n" | grep 'unpacked/*$' > /dev/null; then
      n="$(echo $n | sed 's/-unpacked\/*$//g')"
    fi
    echo " => $n"
    local filename="$(pwd)/$n"
    local unpacked_filename="${filename}-unpacked"

    if ! [ -d "${unpacked_filename}" ]; then
      continue
    fi

    case "${filename}" in
    *.sketch)
      mkdir -p /tmp/git-design$$
      cp -R "${unpacked_filename}" /tmp/git-design$$
      pushd "/tmp/git-design$$/$(basename "${unpacked_filename}")" >> /dev/null

      # Remove the hashsum file, it's not needed in the export
      rm -rf .hashsum

      # Expand some sketch-specific json files
      compress-json meta.json user.json pages/*.json

      zip -r "$(basename "${filename}")" -- * >> /dev/null
      mv "$(basename "${filename}")" "${filename}"

      popd >> /dev/null || exit 1
      rm -rf /tmp/git-design$$
      ;;

    *.studio)
      mkdir -p /tmp/git-design$$
      cp -R "${unpacked_filename}" "/tmp/git-design$$"
      pushd "/tmp/git-design$$/$(basename ${unpacked_filename})" >> /dev/null

      rm -rf .hashsum
      compress-json metadata.json settings.json snapshot.json

      zip -r "$(basename "${filename}")" -- * >> /dev/null
      mv "$(basename "${filename}")" "${filename}"

      popd >> /dev/null || exit 1
      rm -rf /tmp/git-design$$
      ;;
    esac

  done
}


case $1 in
pack)
  shift 1
  pack $@
  ;;
unpack)
  shift 1
  unpack $@
  ;;
*)
  echo "git-design is a way to manage binary design assets in git, built by Ryan Gaus <rgaus.net>"
  echo "Read documentation at https://github.com/1egoman/git-design"
  ;;
esac
